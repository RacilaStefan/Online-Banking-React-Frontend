{"version":3,"sources":["reportWebVitals.js","Utils/Logger.js","Utils/Constants.js","api/axios.js","Utils/UtilFunctions.js","Components/Context/ContextProvider.js","Components/PageComponents/NavItem.js","resources/media/logo.png","Components/PageComponents/Header.js","Components/PageComponents/Footer.js","Routes/Home.js","Components/FormComponents/CustomTextFormField.js","Routes/Login.js","Components/RegistrationForms/UserRegistrationForm.js","Components/RegistrationForms/AddressRegistrationForm.js","Components/RegistrationForms/CIRegistrationForm.js","Components/FormComponents/CustomSelectFormField.js","Components/RegistrationForms/AccountRegistrationForm.js","Routes/Register.js","Routes/Error.js","Routes/Logout.js","Components/ModalForms/YesNoModal.js","Components/ModalForms/ProfileItemModalForm.js","Components/ProfileItem.js","Components/RequireAuth.js","Components/ModalForms/UserModalForm.js","Components/ModalForms/AddressModalForm.js","Components/ModalForms/AccountModalForm.js","Components/AccountContainerForProfile.js","Routes/Profile.js","Components/ModalForms/PaymentModalForm.js","Components/TransactionsContainer.js","Components/AccountContainerForDashboard.js","Routes/Dashboard.js","Routes/AdminPage.js","Routes/VerifyUser.js","Components/RoutesList.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logger","locationName","this","text","output","getTime","LOG_TYPES","ERROR","console","log","err","response","config","method","toString","toUpperCase","baseURL","url","status","data","error","request","message","INFO","name","TRACE","DEBUG","Date","toLocaleTimeString","hour12","info","AUTH_URL","CURRECIES","key","value","ACCOUNT_TYPES","ROLES","ROLE_USER","ROLE_STAFF","ROLE_ADMIN","PATHS","LOGIN","LOGOUT","REGISTER","DASHBOARD","PROFILE","PREFERENCES","HOME","ADMINPAGE","VERIFY_USER","reqStr","VST","REQUIRED_STRING","Yup","required","REQUIRED_NUMBER","REQUIRED_DATE","VALIDATION_SCHEMA","firstName","lastName","email","telephoneNumber","matches","username","password","passConfirm","oneOf","twoFACode","country","region","city","street","number","staircase","apartment","cnp","series","cnp_number","expirationDate","currency","type","iban","length","amount","min","max","USER_VALIDATION_SCHEMA","ADDRESS_VALIDATION_SCHEMA","CI_VALIDATION_SCHEMA","ACCOUNT_VALIDATION_SCHEMA","TRANSACTION_VALIDATION_SCHEMA","toIBAN","fromIBAN","Object","freeze","axios","create","withCredentials","fetchUserData","a","get","_links","address","href","ci","accounts","_accounts","_embedded","accountDtoes","apiError","updateFields","values","context","setContext","keyFound","keys","trace","user","isUserKey","forEach","undefined","put","self","ok","now","catch","id","getRoleComparableValue","role","contextAtom","atom","date","ContextProvider","children","useAtom","location","useLocation","useEffect","_context","isLoggedIn","fetchData","NavItem","path","to","Header","userNav","push","className","src","logo","alt","Footer","Home","useState","baconipsum","setBaconIpsum","users","setUsers","reponse","JSON","stringify","CustomTextFormField","htmlFor","autoComplete","initialValues","Login","state","setState","submitButtonString","setSubmitButtonString","validationSchema","useRef","redirect","handleSubmit","currentForm","btnString","current","handleNextButton","post","onSubmit","Button","onClick","UserRegistrationForm","AddressRegistrationForm","CustomSelectFormField","options","as","map","option","AccountRegistrationForm","schemas","Register","Error","Logout","setText","YesNoModal","formReff","open","close","handleEvent","handleClose","submitForm","Modal","hideBackdrop","onClose","variant","ProfileItemFrom","label","showYesNoDialog","setShowYesNoDialog","initialValue","handleApply","innerRef","ProfileItem","isEditable","setOpen","RequireAuth","roleRequired","isAuthorized","setAuthorized","isLoaded","role1","role2","UserModalForm","hasDiffValues","i","AddressModalForm","AccountModalForm","createBankAccount","AccountContainer","account","showDeleteButton","handleAccountDelete","cardNumber","cvv","balance","ProfileComponent","openEditUser","setOpenEditUser","openEditAddress","setOpenEditAddress","openAddAccount","setOpenAddAccount","accountId","accountLink","delete","deleteBankAccount","Profile","PaymentForm","sourceAccount","userAccountsIBAN","toAccountIBAN","fromAccountIBAN","TransactionsContainer","show","showTransactions","setShowTransactions","DashboardComponent","Dashboard","AdminPage","VerifyUser","useSearchParams","query","setOutput","entries","next","headers","style","fontSize","RoutesList","element","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7e45311.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export class Logger {\r\n    constructor(locationName) {\r\n        this.locationName = locationName;\r\n    }\r\n\r\n    error(text) {\r\n        let output = `${getTime()} ${LOG_TYPES.ERROR} [%c${this.locationName}%c] ${text}`;\r\n        console.log(output, \"color:#f51e0f\", \"\", \"color:#9997fc\", \"\");\r\n    }\r\n\r\n    apiError(err) { // from axios docs\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            let output = `${getTime()} ${LOG_TYPES.ERROR} [%c${this.locationName}%c]`;\r\n            output += ` Request [${err.config.method.toString().toUpperCase()}] ${err.config.baseURL}${err.config.url}`;\r\n            output += ` failed with status code ${err.response.status}`;\r\n\r\n            console.log(output, \"color:#f51e0f\", \"\", \"color:#9997fc\", \"\");\r\n            console.log(`Message \"${err.response.data.error}\"`);\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n            this.error(err.request);\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            this.error(err.message);\r\n        }\r\n    }\r\n\r\n    info(text) {\r\n        let output = `${getTime()} ${LOG_TYPES.INFO} [%c${this.locationName}%c] ${text}`;\r\n        console.log(output, \"color:#02f20a\", \"\", \"color:#9997fc\", \"\");\r\n    }\r\n\r\n    trace(name, text) {\r\n        let output = `${getTime()} ${LOG_TYPES.TRACE} [%c${this.locationName}%c] ${name}= `;\r\n        console.log(output, \"color:yellow\", \"\", \"color:#9997fc\", \"\");\r\n        console.log(text);\r\n    }\r\n}\r\n\r\nexport const LOG_TYPES = {\r\n    INFO: \"[%cINFO%c]\",\r\n    DEBUG: \"[%cDEBUG%c]\",\r\n    ERROR: \"[%cERROR%c]\",\r\n    TRACE: \"[%cTRACE%c]\",\r\n};\r\n\r\nfunction getTime() {\r\n    return new Date().toLocaleTimeString('en-US', { hour12: false });\r\n}\r\n\r\nconst log = new Logger(\"Logger\");\r\n\r\nlog.info(\"Loaded\");","import * as Yup from \"yup\";\r\nimport { Logger } from \"./Logger\";\r\n\r\nconst log = new Logger(\"Constants\");\r\n\r\nlog.info(\"Loaded\");\r\n\r\nexport const REGISTER_URL = \"/api/v2/users\"\r\nexport const USER_BASE_URL = \"/api/v2/users\"\r\nexport const LOGIN_URL = \"/auth/login\";\r\nexport const LOGOUT_URL = \"/auth/logout\";\r\nexport const AUTH_URL = \"/auth\";\r\nexport const BASE_URL = \"http://26.193.78.172:8000\"; //\"http://localhost:8080\";\r\nexport const VERIFY_URL = \"/auth/enable\";\r\nexport const PAY_URL = \"/api/v2/transactions\";\r\n\r\nexport const CURRECIES = [\r\n    { key : \"RON\", value : \"RON\" },\r\n    { key : \"EUR\", value : \"EUR\" },\r\n    { key : \"USD\", value : \"USD\" },\r\n    { key : \"GBP\", value : \"GBP\" },\r\n];\r\n\r\nexport const ACCOUNT_TYPES = [\r\n    { key: \"CURRENT_ACCOUNT\", value: \"CURRENT_ACCOUNT\" },\r\n    { key: \"SAVINGS_ACCOUNT\", value: \"SAVINGS_ACCOUNT\" },\r\n    { key: \"RECURRING_DEPOSIT_ACCOUNT\", value: \"RECURRING_DEPOSIT_ACCOUNT\" },\r\n    { key: \"FIXED_DEPOSIT_ACCOUNT\", value: \"FIXED_DEPOSIT_ACCOUNT\" },\r\n];\r\n\r\nexport const ROLES = {\r\n    ROLE_USER: \"ROLE_USER\",\r\n    ROLE_STAFF: \"ROLE_STAFF\",\r\n    ROLE_ADMIN: \"ROLE_ADMIN\",\r\n};\r\n\r\nexport const PATHS = {\r\n    LOGIN: \"/login\",\r\n    LOGOUT: \"/logout\",\r\n    REGISTER: \"/register\",\r\n    DASHBOARD: \"/my/dashboard\", //\r\n    PROFILE: \"/my/profile\", //visualizarea si actualizarea datelor personale (username etc. si setari de securitate)\r\n    PREFERENCES: \"/my/preferences\", //setari cont stocate in cookies\r\n    HOME: \"/\",\r\n    ADMINPAGE: \"/admin\",\r\n    VERIFY_USER: \"/verify\",\r\n\r\n};\r\n\r\nconst reqStr = \"Required\";\r\n\r\nconst VALIDATION_SCHEMA_TEMPLATES = {\r\n    REQUIRED_STRING: Yup.string().required(reqStr),\r\n    REQUIRED_NUMBER: Yup.number().required(reqStr),\r\n    REQUIRED_DATE: Yup.date(\"Invalid date format\").required(reqStr),\r\n}\r\n\r\nexport const VST = VALIDATION_SCHEMA_TEMPLATES;\r\n\r\nexport const VALIDATION_SCHEMA = {\r\n    firstName: VST.REQUIRED_STRING,\r\n    lastName: VST.REQUIRED_STRING,\r\n    email: VST.REQUIRED_STRING.email(\"Ckeck email format.\"),\r\n    telephoneNumber: VST.REQUIRED_STRING.matches(/^[0-9]{10}$/, \"Invalid telephone number.\"),\r\n    username: VST.REQUIRED_STRING,\r\n    password: VST.REQUIRED_STRING,\r\n    passConfirm: VST.REQUIRED_STRING.oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n    twoFACode: VST.REQUIRED_STRING.matches(/^[0-9]{6}$/, \"Invalid verification code\"),\r\n\r\n    country: VST.REQUIRED_STRING,\r\n    region: VST.REQUIRED_STRING,\r\n    city: VST.REQUIRED_STRING,\r\n    street: VST.REQUIRED_STRING,\r\n    number: VST.REQUIRED_STRING,\r\n    staircase: VST.REQUIRED_STRING,\r\n    apartment: VST.REQUIRED_STRING,\r\n\r\n    cnp: VST.REQUIRED_STRING,\r\n    series: VST.REQUIRED_STRING,\r\n    cnp_number: VST.REQUIRED_STRING,\r\n    expirationDate: VST.REQUIRED_DATE,\r\n\r\n    currency: VST.REQUIRED_STRING,\r\n    type: VST.REQUIRED_STRING,\r\n    \r\n    iban: VST.REQUIRED_STRING.length(24, \"IBAN invalid\"),\r\n    amount: VST.REQUIRED_NUMBER.min(2, \"Min 2\").max(10000, \"Max 10k\"),\r\n};\r\n\r\nexport const USER_VALIDATION_SCHEMA = {\r\n    firstName: VALIDATION_SCHEMA.firstName,\r\n    lastName: VALIDATION_SCHEMA.lastName,\r\n    email: VALIDATION_SCHEMA.email,\r\n    telephoneNumber: VALIDATION_SCHEMA.telephoneNumber,\r\n    username: VALIDATION_SCHEMA.username,\r\n    password: VALIDATION_SCHEMA.password,\r\n    passConfirm: VALIDATION_SCHEMA.passConfirm,\r\n};\r\n\r\nexport const ADDRESS_VALIDATION_SCHEMA = {\r\n    country: VALIDATION_SCHEMA.country,\r\n    region: VALIDATION_SCHEMA.region,\r\n    city: VALIDATION_SCHEMA.city,\r\n    street: VALIDATION_SCHEMA.street,\r\n    number: VALIDATION_SCHEMA.number,\r\n    staircase: VALIDATION_SCHEMA.staircase,\r\n    apartment: VALIDATION_SCHEMA.apartment,\r\n};\r\n\r\nexport const CI_VALIDATION_SCHEMA = {\r\n    cnp: VALIDATION_SCHEMA.cnp,\r\n    series: VALIDATION_SCHEMA.series,\r\n    cnp_number: VALIDATION_SCHEMA.cnp_number,\r\n    expirationDate: VALIDATION_SCHEMA.expirationDate,\r\n};\r\n\r\nexport const ACCOUNT_VALIDATION_SCHEMA = {\r\n    currency: VALIDATION_SCHEMA.currency,\r\n    type: VALIDATION_SCHEMA.type,\r\n};\r\n\r\nexport const TRANSACTION_VALIDATION_SCHEMA = {\r\n    toIBAN: VALIDATION_SCHEMA.iban,\r\n    fromIBAN: VALIDATION_SCHEMA.iban,\r\n    currency: VALIDATION_SCHEMA.currency,\r\n    amount: VALIDATION_SCHEMA.amount,\r\n}\r\n\r\nObject.freeze(CURRECIES);\r\nObject.freeze(ACCOUNT_TYPES);\r\nObject.freeze(ROLES);\r\nObject.freeze(PATHS);\r\nObject.freeze(VALIDATION_SCHEMA);\r\nObject.freeze(VST);\r\nObject.freeze(USER_VALIDATION_SCHEMA);\r\nObject.freeze(ADDRESS_VALIDATION_SCHEMA);\r\nObject.freeze(CI_VALIDATION_SCHEMA);\r\nObject.freeze(ACCOUNT_VALIDATION_SCHEMA);\r\nObject.freeze(TRANSACTION_VALIDATION_SCHEMA);","import axios from \"axios\";\r\nimport { BASE_URL } from \"../Utils/Constants\";\r\n\r\nexport default axios.create({\r\n    withCredentials: true,\r\n    baseURL: BASE_URL,\r\n});","import axios from \"../api/axios\";\r\nimport { AUTH_URL, ROLES } from \"./Constants\";\r\nimport { Logger } from \"./Logger\";\r\n\r\nconst log = new Logger(\"Utility Functions script\");\r\n\r\nlog.info(\"Loaded\");\r\n\r\nexport async function fetchUserData() {\r\n    let response;\r\n    let data;\r\n    \r\n    try {\r\n        response = await (await axios.get(AUTH_URL)).data;\r\n        data = response;\r\n        //log.trace(\"User data\", data);\r\n\r\n        response = await (await axios.get(data._links.address.href)).data;\r\n        data.address = response;\r\n        //log.trace(\"User data with address added\", data);\r\n\r\n        response = await (await axios.get(data._links.ci.href)).data;\r\n        data.ci = response;\r\n        //log.trace(\"User data with ci added\", data);\r\n\r\n        response = await (await axios.get(data._links.accounts.href)).data;\r\n        data.accounts = { _accounts: response._embedded.accountDtoes, _links: response._links };\r\n        //log.trace(\"User data with accounts added\", data);\r\n    } catch (error) {\r\n        log.apiError(error);\r\n        return false;\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport async function updateFields(values, context, setContext) {\r\n    const keyFound = Object.keys(values);\r\n\r\n    log.trace(\"Keys Found\", keyFound);\r\n    const user = {...context.user};\r\n    let isUserKey = false;\r\n    keyFound.forEach( key => {\r\n        if (user[key] !== undefined) {\r\n            user[key] = values[key];\r\n            isUserKey = true;\r\n        }\r\n    });\r\n    log.trace(\"Updated User\", user);\r\n    \r\n    if (isUserKey) {\r\n        axios.put(\r\n            context.user._links.self.href,\r\n            {\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                username: user.username,\r\n                telephoneNumber: user.telephoneNumber,\r\n            }\r\n        ).then((response) => {\r\n            setContext({ok: Date.now()});\r\n            log.info(\"User updated\");\r\n        }).catch((error) => {\r\n            log.apiError(error);\r\n        });\r\n\r\n        return;\r\n    }\r\n\r\n    const address = {...context.user.address};\r\n\r\n    keyFound.forEach( key => {\r\n        if (address[key] !== undefined) {\r\n            address[key] = values[key];\r\n        }\r\n    }); \r\n\r\n    log.trace(\"Updated Address\", address);\r\n\r\n\r\n    axios.put(\r\n        context.user._links.self.href,\r\n        {\r\n            address: {\r\n                id: address.id,\r\n                country: address.country,\r\n                region: address.region,\r\n                city: address.city,\r\n                street: address.street,\r\n                number: address.number,\r\n                staircase: address.staircase,\r\n                apartment: address.apartment,\r\n            }\r\n        }\r\n    ).then((response) => {\r\n        setContext({ok: Date.now()});\r\n        log.info(\"Address updated\");\r\n    }).catch((error) => {\r\n        log.apiError(error);\r\n    });\r\n}\r\n\r\n\r\nexport function compareRoles(role1, role2) {\r\n    if (role2 === undefined) \r\n        role2 = ROLES.ROLE_USER;\r\n    return getRoleComparableValue(role1) >= getRoleComparableValue(role2);\r\n}\r\n\r\nexport function deleteBankAccount(accountId, context, setContext) {\r\n    let accountLink;\r\n    context.user.accounts._accounts.forEach(account => {\r\n        if (account.id === accountId) {\r\n            accountLink = account._links.self.href;\r\n        }\r\n    });\r\n\r\n    axios.delete(accountLink)\r\n        .then((response) => {\r\n            log.info(response.data);\r\n            setContext({ok: Date.now()});\r\n        })\r\n        .catch((error) => {\r\n            log.apiError(error);\r\n        });\r\n}\r\n\r\nexport function createBankAccount(values, context, setContext) {\r\n    log.trace(\"New Account Values\", values);\r\n    axios.post(\r\n        context.user.accounts._links.self.href,\r\n        {\r\n            currency: values.currency,\r\n            type: values.type,\r\n        })\r\n        .then((response) => {\r\n            log.info(response.data);\r\n            setContext({ok: Date.now()});\r\n        })\r\n        .catch((error) => {\r\n            log.apiError(error);\r\n        })\r\n}\r\n\r\nfunction getRoleComparableValue(role) {\r\n    switch (role) {\r\n        case ROLES.ROLE_USER: return 1; \r\n        case ROLES.ROLE_STAFF: return 2; \r\n        case ROLES.ROLE_ADMIN: return 3; \r\n        default: return 0;\r\n    }\r\n}","import { useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Logger } from \"../../Utils/Logger\";\r\nimport { fetchUserData } from \"../../Utils/UtilFunctions\";\r\nimport { atom, useAtom } from \"jotai\";\r\n\r\nexport const contextAtom = atom({});\r\nexport const updateAtom = atom({date: Date.now()});\r\n\r\nconst log = new Logger(\"Context Provider\");\r\n\r\nexport default function ContextProvider({ children }) {\r\n    const [context, setContext] = useAtom(contextAtom);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const data = await fetchUserData();\r\n            let _context;\r\n            if (data === false) {\r\n                _context = { isLoggedIn: false }\r\n                setContext(_context);\r\n            } else {\r\n                _context = { isLoggedIn: true, user: {...data}}\r\n                setContext(_context);\r\n            }\r\n            //setLoaded(true);\r\n            log.trace(\"Context set with value\", _context);\r\n        }\r\n\r\n        fetchData();\r\n    }, [location, context.ok]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        log.info(\"Mounted\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        log.info(\"Updated\");\r\n    }, [context.ok]);\r\n\r\n    log.info(\"Rendered\");\r\n    // log.trace(\"Context on every render\", context);\r\n    // log.trace(\"Am a going to render this time?\", context !== null && context.ok === undefined && Object.keys(context).length !== 0)\r\n    return context !== null && context.ok === undefined && Object.keys(context).length !== 0 ? <> {children} </> : <></>;\r\n}","import { NavLink } from \"react-router-dom\";\r\n\r\nexport default function NavItem({ path, children }) {\r\n    return (\r\n        <li>\r\n            <NavLink to={path}>\r\n                {children}\r\n            </NavLink>\r\n        </li>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logo.ede7fbb3.png\";","import { NavLink } from \"react-router-dom\";\r\nimport \"../../resources/css/header.css\";\r\nimport { contextAtom } from \"../Context/ContextProvider\";\r\nimport { useEffect } from \"react\";\r\nimport { PATHS, ROLES } from \"../../Utils/Constants\";\r\nimport NavItem from \"./NavItem\";\r\nimport { Logger } from \"../../Utils/Logger\";\r\nimport { useAtom } from \"jotai\";\r\nimport logo from \"../../resources/media/logo.png\"\r\n\r\nconst log = new Logger(\"Header Component\");\r\n\r\nexport default function Header() {\r\n    const [ context ] = useAtom(contextAtom);\r\n\r\n    const userNav = [];\r\n    if (context.isLoggedIn !== undefined && context.isLoggedIn) {\r\n        userNav.push(<NavItem key={PATHS.DASHBOARD} path={PATHS.DASHBOARD}>Dashboard</NavItem>);\r\n        userNav.push(<NavItem key={PATHS.PROFILE} path={PATHS.PROFILE}>Profile</NavItem>);\r\n        userNav.push(<NavItem key={PATHS.LOGOUT} path={PATHS.LOGOUT}>Logout</NavItem>);\r\n\r\n        switch (context.user.role) {\r\n            case ROLES.ROLE_ADMIN: \r\n                userNav.push( <NavItem key={PATHS.ADMINPAGE} path={PATHS.ADMINPAGE}>Admin Page</NavItem>); \r\n                break;\r\n            default: break;\r\n        }\r\n    } else {\r\n        userNav.push(<NavItem key={PATHS.LOGIN} path={PATHS.LOGIN}>Login</NavItem>);\r\n        userNav.push(<NavItem key={PATHS.REGISTER} path={PATHS.REGISTER}>Register</NavItem>);\r\n    }\r\n\r\n    useEffect(() => {\r\n        log.info(\"Mounted\");\r\n    }, []);\r\n\r\n    log.info(\"Rendered\");\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <NavLink to={PATHS.HOME} className=\"logo\">\r\n                        <img src={logo} alt=\"Logo\"/>\r\n                    </NavLink>\r\n                    <ul className=\"right\">\r\n                        {userNav}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}","import { Logger } from \"../../Utils/Logger\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst log = new Logger(\"Footer Component\");\r\n\r\nexport default function Footer() {\r\n\r\n    useEffect(() => {\r\n        //log.info(\"Mounted\");\r\n    }, []);\r\n\r\n    return (\r\n        <footer className=\"page-footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <p> Acesta este un footer </p>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../api/axios\";\r\nimport { USER_BASE_URL } from \"../Utils/Constants\";\r\nimport { Logger } from \"../Utils/Logger\";\r\n\r\nconst log = new Logger(\"Home Page\");\r\n\r\nexport default function Home() {\r\n\r\n    const [baconipsum, setBaconIpsum] = useState([]);\r\n    const [users, setUsers] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://baconipsum.com/api/?type=all-meat&paras=2\", { withCredentials: false })\r\n            .then((response) => {\r\n                const text = response.data;\r\n                setBaconIpsum(text);\r\n            }).catch((error) => {\r\n                log.apiError(error);\r\n            });\r\n        \r\n        axios.get(USER_BASE_URL)\r\n            .then((reponse) => {\r\n                const users = reponse.data;\r\n                setUsers({...users});\r\n            }).catch(function(error) {\r\n                log.apiError(error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        log.info(\"Mounted\");\r\n    }, []);\r\n\r\n    log.info(\"Rendered\");\r\n    return (\r\n        <div className=\"container\">\r\n            <h4>Home</h4>\r\n            <p>{baconipsum}</p>\r\n            <pre>{JSON.stringify(users, null, 2)}</pre>\r\n        </div>\r\n    );\r\n}","import { ErrorMessage, Field} from \"formik\";\r\n\r\nexport default function CustomTextFormField({ name, text = null, type = \"text\" }) {\r\n    return (\r\n        <div className=\"input-field\">\r\n            {text ? <label className=\"active\" htmlFor={name}>{text}</label> : <></>}\r\n            <Field name={name} type={type} autoComplete=\"off\"/>\r\n            <ErrorMessage name={name}/>\r\n        </div>\r\n        );\r\n}","import { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"../api/axios\";\r\nimport { LOGIN_URL, PATHS, VALIDATION_SCHEMA } from \"../Utils/Constants\";\r\nimport { fetchUserData } from \"../Utils/UtilFunctions\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Logger } from \"../Utils/Logger\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CustomTextFormField from \"../Components/FormComponents/CustomTextFormField\";\r\nimport { useAtom } from \"jotai\";\r\nimport { contextAtom } from \"../Components/Context/ContextProvider\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst log = new Logger(\"Login Page\");\r\n\r\nconst NUMBER_OF_FORMS = 1;\r\n\r\nconst initialValues = {\r\n    username: 'stefan_admin',\r\n    password: 'qwertyuiop1234',\r\n    twoFACode: '',\r\n}\r\n\r\nexport default function Login() {\r\n    const [ context, setContext ] = useAtom(contextAtom);\r\n    const [ state, setState ] = useState(0);\r\n    const [ submitButtonString, setSubmitButtonString] = useState(\"Next\");\r\n\r\n    const validationSchema = useRef(Yup.object({\r\n        username: VALIDATION_SCHEMA.username,\r\n        password: VALIDATION_SCHEMA.password,\r\n    }))\r\n\r\n    const redirect = context.isLoggedIn ? <Navigate to={PATHS.DASHBOARD}/> : <></>;\r\n    \r\n    const handleBackButton = () => {\r\n        let currentForm = state;\r\n        currentForm = currentForm > 0 ? currentForm - 1 : 0;\r\n        let btnString = currentForm === 1 ? \"Log in\" : \"Next\";\r\n\r\n        validationSchema.current = Yup.object({\r\n            username: VALIDATION_SCHEMA.username,\r\n            password: VALIDATION_SCHEMA.password,\r\n        });\r\n\r\n        setState(currentForm);\r\n        setSubmitButtonString(btnString);\r\n    }\r\n\r\n    const handleNextButton = () => {\r\n        \r\n        let currentForm = state;\r\n        currentForm += 1;\r\n        let btnString = currentForm === 1 ? \"Log in\" : \"Next\";\r\n\r\n        validationSchema.current = Yup.object({\r\n            username: VALIDATION_SCHEMA.username,\r\n            password: VALIDATION_SCHEMA.password,\r\n            twoFACode: VALIDATION_SCHEMA.twoFACode,\r\n        });\r\n        \r\n        setState(currentForm);\r\n        setSubmitButtonString(btnString);\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        if (state < NUMBER_OF_FORMS) {\r\n            handleNextButton();\r\n        }\r\n\r\n        axios.post(\r\n            LOGIN_URL,\r\n            {   \r\n                username: values.username,\r\n                password: values.password,\r\n                twoFACode: values.twoFACode,\r\n            })\r\n            .then((response) => {\r\n                // async function fetchData() {\r\n                //     const data = await fetchUserData();\r\n                //     //log.trace(\"Fetched data\", data);\r\n                //     if (data === false) {\r\n                //         setContext({ isLoggedIn: false });\r\n                //     } else {\r\n                //         setContext({ isLoggedIn: true, user: {...data}});\r\n                //     }\r\n                // }\r\n    \r\n                // fetchData();\r\n                if (state === NUMBER_OF_FORMS)\r\n                    setContext({ok: Date.now()});\r\n                log.info(response.data);\r\n            })\r\n            .catch((error) => {\r\n                log.error(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {redirect} \r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema.current}\r\n                onSubmit={(values) => handleSubmit(values)}\r\n                >\r\n                <Form>\r\n                    { state === 0 ? \r\n                        <><CustomTextFormField name=\"username\" text=\"Username\"/>\r\n                        <CustomTextFormField name=\"password\" text=\"Password\" type=\"password\"/></>\r\n                        :\r\n                        <CustomTextFormField name=\"twoFACode\" text=\"Verification Code\"/>\r\n                    }\r\n                    <div className=\"container\">\r\n                        {state !== 0 ? <Button className=\"btn waves-effect waves-light\" onClick={handleBackButton}> Back </Button> : <></>}\r\n                        <Button type=\"submit\"  className=\"btn waves-effect waves-light\">{submitButtonString}</Button>\r\n                    </div>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import CustomTextFormField from \"../FormComponents/CustomTextFormField\";\r\n\r\nexport default function UserRegistrationForm() {\r\n    return (\r\n        <div className=\"container\">\r\n            <p className=\"red-text\">User Details</p>\r\n            <CustomTextFormField name=\"firstName\" text=\"First Name\"/>\r\n            <CustomTextFormField name=\"lastName\" text=\"Last Name\"/>\r\n            <CustomTextFormField name=\"email\" text=\"Email\"/>\r\n            <CustomTextFormField name=\"telephoneNumber\" text=\"Telephone\"/>\r\n            <CustomTextFormField name=\"username\" text=\"Username\"/>\r\n            <CustomTextFormField name=\"password\" text=\"Password\" type=\"password\"/>\r\n            <CustomTextFormField name=\"passConfirm\" text=\"Confirm Password\" type=\"password\"/>\r\n        </div>\r\n    );\r\n}","import CustomTextFormField from \"../../Components/FormComponents/CustomTextFormField\";\r\n\r\nexport default function AddressRegistrationForm() {\r\n    return (\r\n        <div className=\"container\">\r\n            <p className=\"red-text\">Address</p>\r\n            <CustomTextFormField name=\"country\" text=\"Country\"/>\r\n            <CustomTextFormField name=\"region\" text=\"Region\"/>\r\n            <CustomTextFormField name=\"city\" text=\"City\"/>\r\n            <CustomTextFormField name=\"street\" text=\"Street\"/>\r\n            <CustomTextFormField name=\"number\" text=\"Number\"/>\r\n            <CustomTextFormField name=\"staircase\" text=\"Staircase\"/>\r\n            <CustomTextFormField name=\"apartment\" text=\"Apartment\"/>\r\n        </div>\r\n    );\r\n}","import CustomTextFormField from \"../../Components/FormComponents/CustomTextFormField\";\r\n\r\nexport default function AddressRegistrationForm() {\r\n    return (\r\n        <div className=\"container\">\r\n            <p className=\"red-text\">Identity Card</p>\r\n            <CustomTextFormField name=\"cnp\" text=\"CNP\"/>\r\n            <CustomTextFormField name=\"series\" text=\"Series\"/>\r\n            <CustomTextFormField name=\"number\" text=\"Number\"/>\r\n            <CustomTextFormField name=\"expirationDate\" text=\"Expiration Date\"/>\r\n        </div>\r\n    );\r\n}","import { ErrorMessage, Field} from \"formik\";\r\n\r\nexport default function CustomSelectFormField({ name, options, text = null }) {\r\n\r\n    return (\r\n        <div className=\"input-field\">\r\n            {text ? <label className=\"active\" htmlFor={name}>{text}</label> : <></>}\r\n            <Field as=\"select\" name={name}>\r\n                {options.map(option => {\r\n                    return (\r\n                            <option key={option.key} value={option.value}>{option.key}</option>\r\n                        );\r\n                    }\r\n                )}\r\n            </Field>\r\n            <ErrorMessage name={name}/>\r\n        </div>\r\n    );\r\n}\r\n","import CustomSelectFormField from \"../../Components/FormComponents/CustomSelectFormField\";\r\nimport { CURRECIES, ACCOUNT_TYPES } from \"../../Utils/Constants\";\r\n\r\nexport default function AccountRegistrationForm() {\r\n    return (\r\n        <div className=\"container\">\r\n            <p className=\"red-text\">What type of account do you want to have? (You will be able to open multiple accounts later)</p>\r\n            <CustomSelectFormField name = \"currency\" options={CURRECIES}/>\r\n            <CustomSelectFormField name = \"type\" options={ACCOUNT_TYPES}/>\r\n        </div>\r\n    );\r\n}","import { Form, Formik } from \"formik\";\r\nimport React, { useState, useRef } from \"react\"\r\nimport axios from \"../api/axios\"\r\nimport { USER_VALIDATION_SCHEMA, \r\n    ACCOUNT_VALIDATION_SCHEMA, \r\n    ADDRESS_VALIDATION_SCHEMA, \r\n    CI_VALIDATION_SCHEMA, \r\n    REGISTER_URL } from \"../Utils/Constants\";\r\nimport * as Yup from \"yup\";\r\nimport UserRegistrationForm from \"../Components/RegistrationForms/UserRegistrationForm\";\r\nimport AddressRegistrationForm from \"../Components/RegistrationForms/AddressRegistrationForm\";\r\nimport CIRegistrationForm from \"../Components/RegistrationForms/CIRegistrationForm\";\r\nimport AccountRegistrationForm from \"../Components/RegistrationForms/AccountRegistrationForm\";\r\nimport { Logger } from \"../Utils/Logger\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst NUMBER_OF_FORMS = 3 // begins from 0\r\n\r\nconst log = new Logger(\"Register Page\");\r\n\r\nconst schemas = [\r\n    USER_VALIDATION_SCHEMA, \r\n    ADDRESS_VALIDATION_SCHEMA, \r\n    CI_VALIDATION_SCHEMA, \r\n    ACCOUNT_VALIDATION_SCHEMA\r\n];\r\n\r\nconst initialValues = {\r\n    firstName: 'Popescu',\r\n    lastName: 'Popescu',\r\n    username: '_popescu',\r\n    password: 'asdasdasdasd',\r\n    passConfirm: 'asdasdasdasd',\r\n    email: 'asd@asd.dfasd',\r\n    telephoneNumber: '1231231231',\r\n\r\n    country: 'Asd',\r\n    region: 'Asd',\r\n    city: 'Asd',\r\n    street: 'asd',\r\n    number: 'asd',\r\n    staircase: 'asd',\r\n    apartment: 'asd',\r\n\r\n    cnp: 'asd',\r\n    series: 'asas',\r\n    cnp_number: 'asdasd',\r\n    expirationDate: '09/06/2026',\r\n\r\n    currency: 'RON',\r\n    type: 'CURRENT_ACCOUNT',\r\n};\r\n\r\nexport default function Register() {\r\n\r\n    const [ state, setState ] = useState(0);\r\n    const [ submitButtonString, setSubmitButtonString] = useState(\"Next\");\r\n\r\n    const validationSchema = useRef(Yup.object({ ...schemas[state] }))\r\n\r\n    const handleBackButton = () => {\r\n        let currentForm = state;\r\n        currentForm = currentForm > 0 ? currentForm - 1 : 0;\r\n        let btnString = currentForm === NUMBER_OF_FORMS ? \"Sumbit\" : \"Next\";\r\n\r\n        validationSchema.current = Yup.object({ ...schemas[currentForm] })\r\n\r\n        setState(currentForm);\r\n        setSubmitButtonString(btnString);\r\n    }\r\n\r\n    const handleNextButton = () => {\r\n        let currentForm = state;\r\n        currentForm += 1;\r\n        let btnString = currentForm === NUMBER_OF_FORMS ? \"Sumbit\" : \"Next\";\r\n        \r\n        validationSchema.current = Yup.object({ ...schemas[currentForm] })\r\n\r\n        setState(currentForm);\r\n        setSubmitButtonString(btnString);\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        if (state < NUMBER_OF_FORMS) {\r\n            handleNextButton();\r\n            return\r\n        }\r\n\r\n        log.trace(\"Form data\", values);\r\n\r\n        axios.post(REGISTER_URL,\r\n            {\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                username: values.username,\r\n                password: values.password,\r\n                email: values.email,\r\n                telephoneNumber: values.telephoneNumber,\r\n                address: {\r\n                    country: values.country,\r\n                    region: values.region,\r\n                    city: values.city,\r\n                    street: values.street,\r\n                    number: values.number,\r\n                    staircase: values.staircase,\r\n                    apartment: values.apartment,\r\n                },\r\n                ci: {\r\n                    cnp: values.country,\r\n                    series: values.series,\r\n                    number: values.cnp_number,\r\n                    expirationDate: values.expirationDate,\r\n                },\r\n                accounts: [\r\n                    {\r\n                        currency: values.currency,\r\n                        type: values.type,\r\n                    },\r\n                ],\r\n            }).then((response) => {\r\n                log.trace(\"Response from register\", response.data);\r\n            }).catch((error) => {\r\n                log.error(error);\r\n            });\r\n    }\r\n\r\n    let currentForm;\r\n    switch (state) {\r\n        case 0: currentForm = <UserRegistrationForm/>; break;\r\n        case 1: currentForm = <AddressRegistrationForm/>; break;\r\n        case 2: currentForm = <CIRegistrationForm/>; break;\r\n        case 3: currentForm = <AccountRegistrationForm/>; break;\r\n        default: break;\r\n    }\r\n        \r\n    return (\r\n        <Formik\r\n            initialValues = {initialValues}\r\n            validationSchema = {validationSchema.current}\r\n            onSubmit = {handleSubmit}\r\n        >\r\n            <Form>\r\n                {currentForm}\r\n                <div className=\"container\">\r\n                    {state !== 0 ? <Button className=\"btn waves-effect waves-light\" onClick={handleBackButton}> Back </Button> : <></>}\r\n                    <Button type=\"submit\" className=\"btn waves-effect waves-light\">{submitButtonString}</Button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n}\r\n","export default function Error() {\r\n\r\n    return (\r\n        <h1>Error</h1>\r\n    );\r\n}","import { useAtom } from \"jotai\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"../api/axios\";\r\nimport { contextAtom } from \"../Components/Context/ContextProvider\";\r\nimport { LOGOUT_URL, PATHS } from \"../Utils/Constants\";\r\nimport { Logger } from \"../Utils/Logger\";\r\n\r\nconst log = new Logger(\"Logout Page\");\r\n\r\nexport default function Logout() {\r\n    const [ context, setContext ] = useAtom(contextAtom);\r\n\r\n    const [text, setText] = useState();\r\n    useEffect(() => {\r\n        if (context.isLoggedIn) {\r\n            axios.get(LOGOUT_URL)\r\n                .then((response) => {\r\n                    setContext({ isLoggedIn: false });\r\n                    log.info(response.data);\r\n                }).catch((error) => {\r\n                    log.apiError(error);\r\n                });\r\n            setText(<div> You were succefully logged out. </div>);\r\n        } else {\r\n            setText(<div> You don't have an account, make one<Link to={PATHS.REGISTER}>here</Link></div>);\r\n        }\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {text}\r\n        </div>\r\n    )\r\n}","import Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport default function YesNoModal({ text = \"Are you sure?\", formReff, open, close, handleEvent }) {\r\n    const handleClose = (value) => {\r\n        \r\n        if (value) {\r\n            if (formReff !== undefined) {\r\n                formReff.submitForm();\r\n            } else {\r\n                handleEvent();\r\n                close();\r\n            }\r\n        } else {\r\n            close();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            hideBackdrop\r\n            open={open}\r\n            onClose={() => handleClose(false)}\r\n            aria-labelledby={ \"modal-modal-title\" }\r\n            aria-describedby={ \"modal-modal-description\" }>\r\n            <div className=\"container modal-form\">\r\n                <h4 className=\"modal-modal-title center\">{text}</h4>\r\n                <div className=\"modal-modal-description center\">\r\n                    <Button variant=\"outlined\" onClick={() => handleClose(true)}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"outlined\" onClick={() => handleClose(false)}>\r\n                        No\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}","import { Form, Formik } from \"formik\";\r\nimport CustomTextFormField from \"../FormComponents/CustomTextFormField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { VST } from \"../../Utils/Constants\";\r\nimport * as Yup from \"yup\";\r\nimport { Logger } from \"../../Utils/Logger\";\r\nimport { updateFields } from \"../../Utils/UtilFunctions\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport YesNoModal from \"./YesNoModal\";\r\nimport { Modal } from \"@mui/material\";\r\nimport { useAtom } from \"jotai\";\r\nimport { contextAtom } from \"../Context/ContextProvider\";\r\n\r\nconst log = new Logger(\"Profile Item Form\");\r\n\r\nexport default function ProfileItemFrom({ value, name, label, open, close: handleClose }) {\r\n    const [ context, setContext ] = useAtom(contextAtom);\r\n    const [ showYesNoDialog, setShowYesNoDialog ] = useState(false);\r\n    const formReff = useRef(null);\r\n    const initialValue = {[name]: value};\r\n\r\n    const closeDialog = () => {\r\n        setShowYesNoDialog(false);\r\n    }\r\n\r\n    const handleApply = () => {\r\n        if (Object.values(formReff.current.values)[0] === Object.values(initialValue)[0]) return false;\r\n        if (showYesNoDialog === false) {\r\n            setShowYesNoDialog(true);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleSubmit = (value) => {\r\n        const result = handleApply();\r\n        if (!result) return;\r\n\r\n        setShowYesNoDialog(false);\r\n        updateFields(value, context, setContext);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <Modal \r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n\r\n            <div className=\"container modal-form\">\r\n                <div id=\"modal-modal-description\">\r\n                    <p> { label } </p>\r\n                    <Formik\r\n                        initialValues={initialValue}\r\n                        innerRef={formReff}\r\n                        validationSchema={Yup.object({[name]: VST.REQUIRED_STRING})}\r\n                        onSubmit={handleSubmit}\r\n                        >\r\n                        <Form>\r\n                            <CustomTextFormField name={ name }/>\r\n                            <Button onClick={handleApply} variant=\"contained\">Apply</Button>\r\n                            {showYesNoDialog ? \r\n                                <YesNoModal formReff={formReff.current} open={showYesNoDialog} close={closeDialog}/> : <></>}\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n        \r\n                <Button className=\"close-btn\" onClick={handleClose}>\r\n                    <i className=\"material-icons\">\r\n                        close\r\n                    </i>\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n  );\r\n}","import { Logger } from \"../Utils/Logger\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport ProfileItemFrom from \"./ModalForms/ProfileItemModalForm\";\r\n\r\nconst log = new Logger(\"Profile Item\");\r\n\r\nexport default function ProfileItem({ label, value, isEditable = true, name }) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => {\r\n        log.info(\"Modal close\");\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-panel hoverable row\">\r\n            <div className=\"col s6\">\r\n                <p>{label}</p>\r\n                <div>\r\n                    {value}\r\n                </div>\r\n            </div>\r\n            { isEditable ? \r\n            <div className=\"col s6\">\r\n                <Button variant=\"contained\" onClick={handleOpen}>Edit</Button>\r\n                <ProfileItemFrom open={open} close={handleClose} value={value} name={name} label={label} />\r\n            </div> : <></> }\r\n        </div>\r\n    );\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport { useAtom } from \"jotai\";\r\nimport { compareRoles } from \"../Utils/UtilFunctions\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport { Logger } from \"../Utils/Logger\";\r\nimport { PATHS } from \"../Utils/Constants\";\r\nimport { contextAtom } from \"./Context/ContextProvider\";\r\n\r\nconst log = new Logger(\"Require Auth\");\r\n\r\nexport default function RequireAuth({ children, roleRequired }) {\r\n    const [ context ] = useAtom(contextAtom);\r\n    const location = useLocation();\r\n\r\n    const [isAuthorized, setAuthorized] = useState(false);\r\n    const isLoaded = useRef(false);\r\n    useEffect(() => {\r\n\t\tif (!context.isLoggedIn || !compareRoles(context.user.role, roleRequired)) {\r\n\t\t\tlog.info(\"Unauthorized\");\r\n\t\t\tsetAuthorized(false);\r\n\t\t} else {\r\n\t\t\tlog.info(\"Authorized\");\r\n\t\t\tsetAuthorized(true);\r\n\t\t}\r\n\t\tisLoaded.current = true;\r\n    }, [location]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\tuseEffect(() => {\r\n        log.info(\"Mounted\");\r\n    }, []);\r\n\r\n    log.info(\"Rendered\");\r\n\r\n\treturn isAuthorized ? <>{children}</> : <></>;\r\n}","import { Modal, Button } from \"@mui/material\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { VALIDATION_SCHEMA } from \"../../Utils/Constants\";\r\nimport { updateFields } from \"../../Utils/UtilFunctions\";\r\nimport CustomTextFormField from \"../FormComponents/CustomTextFormField\";\r\nimport YesNoModal from \"./YesNoModal\";\r\nimport { Logger } from \"../../Utils/Logger\";\r\nimport { useAtom } from \"jotai\";\r\nimport { contextAtom } from \"../Context/ContextProvider\";\r\n\r\nconst log = new Logger(\"User Modal Form\");\r\n\r\nconst validationSchema = Yup.object({\r\n    firstName: VALIDATION_SCHEMA.firstName,\r\n    lastName: VALIDATION_SCHEMA.lastName,\r\n    username: VALIDATION_SCHEMA.username,\r\n    telephoneNumber: VALIDATION_SCHEMA.telephoneNumber,\r\n})\r\n\r\nexport default function UserModalForm({ open, close: handleClose }) {\r\n    const [ context, setContext ] = useAtom(contextAtom);\r\n    const [ showYesNoDialog, setShowYesNoDialog ] = useState(false);\r\n    const formReff = useRef(null);\r\n    const initialValues = {\r\n        firstName: context.user.firstName,\r\n        lastName: context.user.lastName,\r\n        username: context.user.username,\r\n        telephoneNumber: context.user.telephoneNumber,\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setShowYesNoDialog(false);\r\n    }\r\n\r\n    const handleApply = () => {\r\n        let hasDiffValues = false;\r\n        for (let i = 0; i < Object.values(formReff.current.values).length; i++) {\r\n            if (Object.values(formReff.current.values)[i] !== Object.values(initialValues)[i]) {\r\n                hasDiffValues = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!hasDiffValues) return false;\r\n        if (showYesNoDialog === false) {\r\n            setShowYesNoDialog(true);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleSubmit = (value) => {\r\n        if (!handleApply()) return;\r\n\r\n        setShowYesNoDialog(false);\r\n        updateFields(value, context, setContext);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <Modal \r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n\r\n            <div className=\"container modal-form\">\r\n                <div id=\"modal-modal-description\">\r\n                    <p> Edit User </p>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        innerRef={formReff}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleSubmit}\r\n                        >\r\n                        <Form>\r\n                            <CustomTextFormField name=\"firstName\" text=\"First Name\"/>\r\n                            <CustomTextFormField name=\"lastName\" text=\"Last Name\"/>\r\n                            <CustomTextFormField name=\"username\" text=\"Username\"/>\r\n                            <CustomTextFormField name=\"telephoneNumber\" text=\"TelephoneNumber\"/>\r\n                            <Button onClick={handleApply} variant=\"contained\">Apply</Button>\r\n                            {showYesNoDialog ? \r\n                                <YesNoModal formReff={formReff.current} open={showYesNoDialog} close={closeDialog}/> : <></>}\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n        \r\n                <Button className=\"close-btn\" onClick={handleClose}>\r\n                    <i className=\"material-icons\">\r\n                        close\r\n                    </i>\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n","import { Modal, Button } from \"@mui/material\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { VALIDATION_SCHEMA } from \"../../Utils/Constants\";\r\nimport { updateFields } from \"../../Utils/UtilFunctions\";\r\nimport CustomTextFormField from \"../FormComponents/CustomTextFormField\";\r\nimport YesNoModal from \"./YesNoModal\";\r\nimport { Logger } from \"../../Utils/Logger\";\r\nimport { useAtom } from \"jotai\";\r\nimport { contextAtom } from \"../Context/ContextProvider\";\r\n\r\nconst log = new Logger(\"Address Modal Form\");\r\n\r\nconst validationSchema = Yup.object({\r\n   country: VALIDATION_SCHEMA.country,\r\n   region: VALIDATION_SCHEMA.region,\r\n   city: VALIDATION_SCHEMA.city,\r\n   street: VALIDATION_SCHEMA.street,\r\n   number: VALIDATION_SCHEMA.number,\r\n   staircase: VALIDATION_SCHEMA.staircase,\r\n   apartment: VALIDATION_SCHEMA.apartment,\r\n})\r\n\r\nexport default function AddressModalForm({ open, close: handleClose }) {\r\n    const [context, setContext] = useAtom(contextAtom);\r\n    const [showYesNoDialog, setShowYesNoDialog] = useState(false);\r\n    const formReff = useRef(null);\r\n    \r\n    const initialValues = {\r\n        country: context.user.address.country,\r\n        region: context.user.address.region,\r\n        city: context.user.address.city,\r\n        street: context.user.address.street,\r\n        number: context.user.address.number,\r\n        staircase: context.user.address.staircase,\r\n        apartment: context.user.address.apartment,\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setShowYesNoDialog(false);\r\n    }\r\n\r\n    const handleApply = () => {\r\n        let hasDiffValues = false;\r\n        for (let i = 0; i < Object.values(formReff.current.values).length; i++) {\r\n            if (Object.values(formReff.current.values)[i] !== Object.values(initialValues)[i]) {\r\n                hasDiffValues = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!hasDiffValues) return false;\r\n        if (showYesNoDialog === false) {\r\n            setShowYesNoDialog(true);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleSubmit = (value) => {\r\n        const result = handleApply();\r\n        if (!result) return;\r\n\r\n        setShowYesNoDialog(false);\r\n        updateFields(value, context, setContext);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <Modal \r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n\r\n            <div className=\"container modal-form\">\r\n                <div id=\"modal-modal-description\">\r\n                    <p> Edit Address </p>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        innerRef={formReff}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleSubmit}\r\n                        >\r\n                        <Form>\r\n                            <CustomTextFormField name=\"country\" text=\"Country\"/>\r\n                            <CustomTextFormField name=\"region\" text=\"Region\"/>\r\n                            <CustomTextFormField name=\"city\" text=\"City\"/>\r\n                            <CustomTextFormField name=\"street\" text=\"Street\"/>\r\n                            <CustomTextFormField name=\"number\" text=\"Number\"/>\r\n                            <CustomTextFormField name=\"staircase\" text=\"Staircase\"/>\r\n                            <CustomTextFormField name=\"apartment\" text=\"Apartment\"/>\r\n                            <Button onClick={handleApply} variant=\"contained\">Apply</Button>\r\n                            {showYesNoDialog ? \r\n                                <YesNoModal formReff={formReff.current} open={showYesNoDialog} close={closeDialog}/> : <></>}\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n        \r\n                <Button className=\"close-btn\" onClick={handleClose}>\r\n                    <i className=\"material-icons\">\r\n                        close\r\n                    </i>\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n","import { Modal, Button } from \"@mui/material\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { VALIDATION_SCHEMA, CURRECIES, ACCOUNT_TYPES } from \"../../Utils/Constants\";\r\nimport { createBankAccount } from \"../../Utils/UtilFunctions\";\r\nimport CustomSelectFormField from \"../FormComponents/CustomSelectFormField\";\r\nimport YesNoModal from \"./YesNoModal\";\r\nimport { Logger } from \"../../Utils/Logger\";\r\nimport { useAtom } from \"jotai\";\r\nimport { contextAtom } from \"../Context/ContextProvider\";\r\n\r\nconst log = new Logger(\"Address Modal Form\");\r\n\r\nconst validationSchema = Yup.object({\r\n   currency: VALIDATION_SCHEMA.currency,\r\n   type: VALIDATION_SCHEMA.type,\r\n});\r\n\r\nconst initialValues = {\r\n    currency: 'RON',\r\n    type: 'CURRENT_ACCOUNT',\r\n};\r\n\r\nexport default function AccountModalForm({ open, close: handleClose }) {\r\n    const [ context, setContext ] = useAtom(contextAtom);\r\n    const [ showYesNoDialog, setShowYesNoDialog ] = useState(false);\r\n    const formReff = useRef(null);\r\n\r\n    const closeDialog = () => {\r\n        setShowYesNoDialog(false);\r\n    }\r\n\r\n    const handleApply = () => {\r\n        if (showYesNoDialog === false) {\r\n            setShowYesNoDialog(true);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleSubmit = (value) => {\r\n        const result = handleApply();\r\n        if (!result) return;\r\n\r\n        setShowYesNoDialog(false);\r\n        createBankAccount(value, context, setContext);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <Modal \r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n\r\n            <div className=\"container modal-form\">\r\n                <div id=\"modal-modal-description\">\r\n                    <p> Add account </p>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        innerRef={formReff}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleSubmit}\r\n                        >\r\n                        <Form>\r\n                            <CustomSelectFormField name = \"currency\" options={CURRECIES}/>\r\n                            <CustomSelectFormField name = \"type\" options={ACCOUNT_TYPES}/>\r\n                            <Button onClick={handleApply} variant=\"contained\">Add</Button>\r\n                            {showYesNoDialog ? \r\n                                <YesNoModal formReff={formReff.current} open={showYesNoDialog} close={closeDialog}/> : <></>}\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n        \r\n                <Button className=\"close-btn\" onClick={handleClose}>\r\n                    <i className=\"material-icons\">\r\n                        close\r\n                    </i>\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n","import ProfileItem from \"./ProfileItem\";\r\nimport YesNoModal from \"./ModalForms/YesNoModal\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function AccountContainer({ account, showDeleteButton, handleAccountDelete }) {\r\n    const [ open, setOpen ] = useState(false);\r\n    return (\r\n        <div className=\"card-panel\">\r\n            <p> { `Account ${account.id}` } </p>\r\n            <ProfileItem label= \"IBAN\" value={ account.iban } isEditable={ false }/>\r\n            <ProfileItem label= \"Card Number\" value={ account.cardNumber } isEditable={ false } />\r\n            <ProfileItem label= \"Currency\" value={ account.currency } isEditable={ false } />\r\n            <ProfileItem label= \"Type\" value={ account.type } isEditable={ false } />\r\n            <ProfileItem label= \"CVV\" value={ account.cvv } isEditable={ false } />\r\n            <ProfileItem label= \"Balance\" value={ account.balance } isEditable={ false } />\r\n            <ProfileItem label= \"Expires in\" value={ account.expirationDate } isEditable={ false } />\r\n            {showDeleteButton ? <div>\r\n                <Button variant=\"outlined\" onClick={() => setOpen(true)}>Delete Account</Button>\r\n                <YesNoModal \r\n                    handleEvent={() => handleAccountDelete(account.id)} \r\n                    text={`You want to delete Account ${account.id}?`} \r\n                    open={open} \r\n                    close={() => setOpen(false)} />\r\n            </div> : <></>}\r\n        </div>    \r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport ProfileItem from \"../Components/ProfileItem\";\r\nimport { Logger } from \"../Utils/Logger\";\r\nimport Button from \"@mui/material/Button\";\r\nimport RequireAuth from \"../Components/RequireAuth\";\r\nimport UserModalForm from \"../Components/ModalForms/UserModalForm\";\r\nimport AddressModalForm from \"../Components/ModalForms/AddressModalForm\";\r\nimport AccountModalForm from \"../Components/ModalForms/AccountModalForm\";\r\nimport AccountContainer from \"../Components/AccountContainerForProfile\";\r\nimport { deleteBankAccount } from \"../Utils/UtilFunctions\";\r\nimport { useAtom } from \"jotai\";\r\nimport { contextAtom } from \"../Components/Context/ContextProvider\";\r\n\r\nvar log = new Logger(\"Profile Page\");\r\n\r\nfunction ProfileComponent() {\r\n    const [ context, setContext ] = useAtom(contextAtom);\r\n    \r\n    const [ openEditUser, setOpenEditUser ] = useState(false);\r\n    const [ openEditAddress, setOpenEditAddress ] = useState(false);\r\n    const [ openAddAccount, setOpenAddAccount ] = useState(false);\r\n\r\n    const handleAccountDelete = (id) => {\r\n        deleteBankAccount(id, context, setContext);\r\n    }\r\n\r\n    let accounts;\r\n    const showDeleteButton = context.user.accounts._accounts.length > 1;\r\n    accounts = context.user.accounts._accounts.map((account) => {\r\n        return (\r\n            <AccountContainer key={account.id} account={account} handleAccountDelete={handleAccountDelete} showDeleteButton={showDeleteButton}/>\r\n        );\r\n    });\r\n      \r\n    return (\r\n        <div className=\"container\">\r\n            <h4>My Profile</h4>\r\n            <div className=\"card-panel\">\r\n                <ProfileItem label= \"First Name\" value= { context.user.firstName } name=\"firstName\" />\r\n                <ProfileItem label= \"Last Name\" value= { context.user.lastName } name=\"lastName\" />\r\n                <ProfileItem label= \"Username\" value= { context.user.username } name=\"username\" />\r\n                <ProfileItem label= \"Email\" value= { context.user.email } isEditable={ false } />\r\n                <ProfileItem label= \"Telephone Number\" value= { context.user.telephoneNumber } name=\"telephoneNumber\" />\r\n                <div>\r\n                    <Button variant=\"outlined\" onClick={() => setOpenEditUser(true)}>Edit User</Button>\r\n                    <UserModalForm open={openEditUser} close={() => setOpenEditUser(false)}/>\r\n                </div>            \r\n            </div>\r\n            <div className=\"card-panel\">\r\n                <ProfileItem label= \"Country\" value= { context.user.address.country } name=\"country\" />\r\n                <ProfileItem label= \"Region\" value= { context.user.address.region } name=\"region\" />\r\n                <ProfileItem label= \"City\" value= { context.user.address.city } name=\"city\" />\r\n                <ProfileItem label= \"Street\" value= { context.user.address.street } name=\"street\" />\r\n                <ProfileItem label= \"Number\" value= { context.user.address.number } name=\"number\" />\r\n                <ProfileItem label= \"Staircase\" value= { context.user.address.staircase } name=\"staircase\" />\r\n                <ProfileItem label= \"Apartment\" value= { context.user.address.apartment } name=\"apartment\" />\r\n                <div>\r\n                    <Button variant=\"outlined\" onClick={() => setOpenEditAddress(true)}>Edit Address</Button>\r\n                    <AddressModalForm open={openEditAddress} close={() => setOpenEditAddress(false)}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-panel\">\r\n                <ProfileItem label= \"CNP\" value= { context.user.ci.cnp } isEditable={ false } />\r\n                <ProfileItem label= \"Series\" value= { context.user.ci.series } isEditable={ false } />\r\n                <ProfileItem label= \"Number\" value= { context.user.ci.number } isEditable={ false } />\r\n                <ProfileItem label= \"Expires in\" value= { context.user.ci.expirationDate } isEditable={ false } />\r\n            </div>\r\n            <div className=\"card-panel\">\r\n                { accounts }\r\n                <div>\r\n                    <Button variant=\"outlined\" onClick={() => setOpenAddAccount(true)}>Add Account</Button>\r\n                    <AccountModalForm open={openAddAccount} close={() => setOpenAddAccount(false)}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Profile() {\r\n    return (\r\n        <RequireAuth>\r\n            <ProfileComponent/>\r\n        </RequireAuth>\r\n    );\r\n}","import React from \"react\";\r\nimport { Logger } from \"../../Utils/Logger\";\r\nimport { contextAtom, updateAtom } from \"../Context/ContextProvider\";\r\nimport * as Yup from \"yup\";\r\nimport { TRANSACTION_VALIDATION_SCHEMA, CURRECIES, PAY_URL } from \"../../Utils/Constants\";\r\nimport { useAtom } from \"jotai\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Formik, Form } from \"formik\";\r\nimport CustomTextFormField from \"../FormComponents/CustomTextFormField\";\r\nimport CustomSelectFormField from \"../FormComponents/CustomSelectFormField\";\r\nimport { useState, useRef } from \"react\";\r\nimport axios from \"../../api/axios\";\r\n\r\nconst log = new Logger(\"Payment Form\");\r\n\r\nconst NUMBER_OF_FORMS = 1;\r\n\r\nexport default function PaymentForm({open, close: handleClose, account: sourceAccount}) {\r\n    const [context, setContext] = useAtom(contextAtom);\r\n    const [state, setState] = useState(0);\r\n    const formReff = useRef(null);\r\n    const [submitButtonString, setSubmitButtonString] = useState(\"Next\");\r\n\r\n    const userAccountsIBAN = [];\r\n    context.user.accounts._accounts.forEach(account => {\r\n        userAccountsIBAN.push({key: `${account.iban} ${account.type} ${account.balance} ${account.currency}`, value:account.iban});\r\n    });\r\n\r\n    const initialValues = {\r\n        toIBAN: \"\",\r\n        fromIBAN: sourceAccount.iban,\r\n        currency: sourceAccount.currency,\r\n        amount: \"\",\r\n    }\r\n\r\n    const handleBackButton = () => {\r\n        let currentForm = state;\r\n        currentForm = currentForm > 0 ? currentForm - 1 : 0;\r\n        let btnString = currentForm === NUMBER_OF_FORMS ? \"Sumbit\" : \"Next\";\r\n\r\n        setState(currentForm);\r\n        setSubmitButtonString(btnString);\r\n    }\r\n\r\n    const handleNextButton = () => {\r\n        let currentForm = state;\r\n        currentForm += 1;\r\n        let btnString = currentForm === NUMBER_OF_FORMS ? \"Confirm\" : \"Next\";\r\n\r\n        setState(currentForm);\r\n        setSubmitButtonString(btnString);\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        if (formReff.current.values.toIBAN === formReff.current.values.fromIBAN) {\r\n            return;\r\n        }\r\n        if (state < NUMBER_OF_FORMS) {\r\n            handleNextButton();\r\n            return;\r\n        }\r\n\r\n        axios.post(PAY_URL, \r\n            {\r\n                toAccountIBAN: values.toIBAN,\r\n                fromAccountIBAN: values.fromIBAN,\r\n                currency: values.currency,\r\n                amount: values.amount,\r\n            }\r\n        ).then((response) => {\r\n            log.info(response.data);\r\n            setContext({ok: Date.now()});\r\n            \r\n        }).catch((error) => {\r\n            log.apiError(error);\r\n        });\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n\r\n            <div className=\"container modal-form\">\r\n                <div id=\"modal-modal-description\">\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        innerRef={formReff}\r\n                        validationSchema={Yup.object({...TRANSACTION_VALIDATION_SCHEMA})}\r\n                        onSubmit={handleSubmit}\r\n                        >\r\n                        <Form>\r\n                            { state === 0 ? <>\r\n                                <p> New Payment </p>\r\n                                <CustomSelectFormField name=\"fromIBAN\" options={userAccountsIBAN} text=\"From Account\"/>\r\n                                <CustomTextFormField name=\"toIBAN\" text=\"To Account\"/>\r\n                                <CustomSelectFormField name=\"currency\" options={CURRECIES}/>\r\n                                <CustomTextFormField name=\"amount\" text=\"Amount\"/></>\r\n                            :\r\n                                <><p> Confirm Payment </p>\r\n                                <p> {`You are going to transfer ${formReff.current.values.amount} ${formReff.current.values.currency} to this account`} </p>\r\n                                <p> {`${formReff.current.values.toIBAN}`} </p>\r\n                                <p> from this account </p>\r\n                                <p> {`${formReff.current.values.fromIBAN}`} </p></>\r\n                            }\r\n                            <div className=\"submit-buttons-container\">\r\n                                {state !== 0 ? <Button className=\"btn waves-effect waves-light first\" onClick={handleBackButton}> Back </Button> : <></>}\r\n                                <Button type=\"submit\" className=\"btn waves-effect waves-light second\">{submitButtonString}</Button>\r\n                            </div>\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n        \r\n                <Button className=\"close-btn\" onClick={handleClose}>\r\n                    <i className=\"material-icons\">\r\n                        close\r\n                    </i>\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TransactionsContainer({show, iban}) {\r\n  return (\r\n    show ? \r\n    <div>\r\n        {iban}\r\n    </div> : <></>\r\n  )\r\n}\r\n","import { Button } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { Logger } from \"../Utils/Logger\";\r\nimport PaymentForm from \"./ModalForms/PaymentModalForm\";\r\nimport TransactionsContainer from \"./TransactionsContainer\";\r\n\r\nconst log = new Logger(\"Account Container\");\r\n\r\nexport default function AccountContainer({ account }) {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [showTransactions, setShowTransactions] = useState(false);\r\n\r\n\t//log.trace(\"Account given\", account);\r\n\r\n  \treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"card-panel\">\r\n\t\t\t\t<div className=\"card-content row\">\r\n\t\t\t\t\t<span className=\"card-title col s8\">{account.type}</span>\r\n\t\t\t\t\t<div className=\"acc-balance col s4\">\r\n\t\t\t\t\t\t{/* <span>Balance</span> */}\r\n\t\t\t\t\t\t<span>{` ${account.balance} ${account.currency}`}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"col\">{account.iban}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-action\">\r\n\t\t\t\t\t<Button onClick={() => setShowTransactions(!showTransactions)}> Transaction history </Button>\r\n\t\t\t\t\t<Button onClick={() => setOpen(true)}> New Payment </Button>\r\n\t\t\t\t\t<PaymentForm open={open} close={() => setOpen(false)} account={account}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<TransactionsContainer show={showTransactions} iban={account.iban}/>\r\n\t\t</>\r\n  \t);\r\n}\r\n","import { useAtom } from \"jotai\";\r\nimport AccountContainer from \"../Components/AccountContainerForDashboard\";\r\nimport { contextAtom } from \"../Components/Context/ContextProvider\";\r\nimport RequireAuth from \"../Components/RequireAuth\";\r\nimport { Logger } from \"../Utils/Logger\";\r\n\r\nconst log = new Logger(\"Dashboard\");\r\n\r\nfunction DashboardComponent() {\r\n    const [ context ] = useAtom(contextAtom);\r\n\r\n    let accounts;\r\n    accounts = context.user.accounts._accounts.map((account) => {\r\n        return (\r\n            <AccountContainer key={account.id} account={account}/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h4>Dashboard</h4>\r\n            <div>\r\n                {accounts}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <RequireAuth>\r\n            <DashboardComponent/>\r\n        </RequireAuth>\r\n    );\r\n}","import RequireAuth from \"../Components/RequireAuth\";\r\nimport { ROLES } from \"../Utils/Constants\";\r\n\r\nexport default function AdminPage() {\r\n  return (\r\n    <RequireAuth roleRequired={ ROLES.ROLE_ADMIN }>\r\n        <div className=\"container\">\r\n            <h4>Admin Page</h4>\r\n        </div>\r\n    </RequireAuth>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport axios from \"../api/axios\";\r\nimport { VERIFY_URL } from \"../Utils/Constants\";\r\nimport { Logger } from \"../Utils/Logger\";\r\n\r\nconst log = new Logger(\"Verify User\");\r\n\r\n\r\nexport default function VerifyUser() {\r\n    const [query] = useSearchParams();\r\n\tconst [ output, setOutput ] = useState(\"Waiting for verification\");\r\n\r\n    useEffect(() => {\r\n\t\taxios.post(VERIFY_URL, query.entries().next().value[0], { headers: { \"Content-Type\": \"text/plain\" }}\r\n\t\t\t).then((response) => {\r\n\t\t\t\tlog.info(response.data);\r\n\t\t\t\tsetOutput(\"Verification complete\");\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tlog.apiError(error);\r\n\t\t\t\tsetOutput(\"Error\");\r\n\t\t\t});\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\tlog.trace(\"Query value\", query.entries().next().value[0]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n\t\t<span className=\"large-text\">{output}</span>\r\n\t\t{output !== \"Error\" \r\n\t\t? <i className=\"material-icons blue-text\" style={{fontSize: \"8em\" }}> task_alt </i>\r\n\t\t: <i className=\"material-icons blue-text\" style={{fontSize: \"8em\" }}> error_outline </i>}\r\n\t\t\r\n\t</div>\r\n  )\r\n}\r\n","import { PATHS } from \"../Utils/Constants\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\n//Routes\r\nimport Home from \"../Routes/Home\";\r\nimport Login from \"../Routes/Login\";\r\nimport Register from \"../Routes/Register\";\r\nimport Error from \"../Routes/Error\";\r\nimport Logout from \"../Routes/Logout\";\r\nimport Profile from \"../Routes/Profile\";\r\nimport Dashboard from \"../Routes/Dashboard\";\r\nimport AdminPage from \"../Routes/AdminPage\";\r\nimport VerifyUser from \"../Routes/VerifyUser\";\r\n\r\nexport default function RoutesList() {\r\n  return (\r\n    <main>\r\n      <Routes>\r\n        <Route path={PATHS.HOME} element={<Home />}/>\r\n        <Route path={PATHS.LOGIN} element={<Login />} />\r\n        <Route path={PATHS.LOGOUT} element={<Logout />} />\r\n        <Route path={PATHS.REGISTER} element={<Register />}/>\r\n        <Route exact path={PATHS.PROFILE} element={<Profile />} />\r\n        <Route exact path={PATHS.DASHBOARD} element={<Dashboard />} />\r\n        <Route exact path={PATHS.PREFERENCES} element={<></>} />\r\n        <Route path={PATHS.ADMINPAGE} element={<AdminPage />} />\r\n        <Route path={PATHS.VERIFY_USER} element={<VerifyUser/>} />\r\n        <Route path=\"*\" element={<Error />}/>\r\n      </Routes>\r\n    </main>\r\n  )\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport reportWebVitals from './reportWebVitals';\n\n//CSS\nimport \"normalize.css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"./resources/css/index.css\";\n\n//Components\nimport Header from \"./Components/PageComponents/Header\";\nimport Footer from \"./Components/PageComponents/Footer\";\n\nimport { Logger } from \"./Utils/Logger\";\nimport RoutesList from \"./Components/RoutesList\";\nimport ContextProvider from \"./Components/Context/ContextProvider\";\n\nconst log = new Logger(\"Index Page\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ContextProvider>\n        <Header />\n        <RoutesList/>\n        <Footer />\n      </ContextProvider>\n    </BrowserRouter>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}